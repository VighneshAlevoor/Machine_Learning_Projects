
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

dataset= pd.read_csv('C:\\Users\\lenovo\\Desktop\\Machine-Learning-A-Z-New\\Machine Learning A-Z New\\Part 2 - Regression\\Section 5 - Multiple Linear Regression\\50_Startups.csv')

x= dataset.iloc[:,:-1].values
y=dataset.iloc[:,-1:].values



from sklearn.preprocessing import LabelEncoder, OneHotEncoder
labelEncoder_x= LabelEncoder()
x[:,3]=labelEncoder_x.fit_transform(x[:,3])
oneHotEncoder= OneHotEncoder(categorical_features=[3])
x = oneHotEncoder.fit_transform(x).toarray()

#avoid dummy variable, remove 1 column, always dummy-1
x=x[:,1:]

from sklearn.model_selection import train_test_split
x_train, x_test,y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=0)


from sklearn.linear_model import LinearRegression
regression = LinearRegression().fit(x_train,y_train)

y_pred= regression.predict(x_test)


#Finding p value
#append ones becoz, sm wont consider constant b0 in linear equation, bo means x=1
#p value low means high effect on dependent variable profit by independent variable R&D spend
import statsmodels.formula.api as sm
x=np.append(arr=np.ones([50,1]).astype(int), values=x, axis=1)
x_opt = x[:,[0,1,2,3,4,5]]
regression_OLS = sm.OLS(endog=y, exog= x_opt).fit()
regression_OLS.summary()


